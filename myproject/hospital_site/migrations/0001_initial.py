# Generated by Django 5.1.4 on 2025-01-04 16:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speciality_name', models.CharField(max_length=50)),
                ('speciality_name_en', models.CharField(max_length=50, null=True)),
                ('speciality_name_ru', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('ward_types', models.CharField(choices=[('VIP', 'VIP'), ('simple', 'Simple')], default='simple', max_length=10)),
                ('capacity', models.PositiveSmallIntegerField(default=0)),
                ('current_occupancy', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('doctor', 'Doctor'), ('patient', 'Patient')], default='patient', max_length=10)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='KG')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('address', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification', models.CharField(max_length=50)),
                ('shift_start', models.DateTimeField(auto_now_add=True)),
                ('shift_end', models.DateTimeField(auto_now_add=True)),
                ('working_days', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday')], max_length=49, null=True)),
                ('experience_years', models.PositiveSmallIntegerField(default=0)),
                ('price', models.PositiveSmallIntegerField(default=0)),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='doctors', to=settings.AUTH_USER_MODEL)),
                ('specialty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital_site.speciality')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('name_en', models.CharField(max_length=50, null=True)),
                ('name_ru', models.CharField(max_length=50, null=True)),
                ('location', models.CharField(max_length=100)),
                ('location_en', models.CharField(max_length=100, null=True)),
                ('location_ru', models.CharField(max_length=100, null=True)),
                ('head_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='department', to='hospital_site.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emergency_contact', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='KG')),
                ('blood_type', models.CharField(max_length=15)),
                ('allergies', models.CharField(blank=True, max_length=100, null=True)),
                ('allergies_en', models.CharField(blank=True, max_length=100, null=True)),
                ('allergies_ru', models.CharField(blank=True, max_length=100, null=True)),
                ('medical_history', models.TextField(blank=True, null=True)),
                ('medical_history_en', models.TextField(blank=True, null=True)),
                ('medical_history_ru', models.TextField(blank=True, null=True)),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patients', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosis', models.TextField()),
                ('diagnosis_en', models.TextField(null=True)),
                ('diagnosis_ru', models.TextField(null=True)),
                ('treatment', models.TextField()),
                ('treatment_en', models.TextField(null=True)),
                ('treatment_ru', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('doctor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital_site.doctor')),
                ('patient_id', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='medical_record', to='hospital_site.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('comment', models.TextField()),
                ('comment_en', models.TextField(null=True)),
                ('comment_ru', models.TextField(null=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='hospital_site.doctor')),
                ('doctor_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='review', to='hospital_site.doctor')),
                ('doctor_ru', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='review', to='hospital_site.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital_site.patient')),
                ('patient_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hospital_site.patient')),
                ('patient_ru', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hospital_site.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Billing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.PositiveSmallIntegerField(default=0)),
                ('paid', models.BooleanField(default=False)),
                ('issued_date', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='billing', to='hospital_site.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('запланировано', 'запланировано'), ('завершено', 'завершено'), ('отменено', 'отменено')], max_length=18)),
                ('status_en', models.CharField(choices=[('запланировано', 'запланировано'), ('завершено', 'завершено'), ('отменено', 'отменено')], max_length=18, null=True)),
                ('status_ru', models.CharField(choices=[('запланировано', 'запланировано'), ('завершено', 'завершено'), ('отменено', 'отменено')], max_length=18, null=True)),
                ('notes', models.TextField()),
                ('notes_en', models.TextField(null=True)),
                ('notes_ru', models.TextField(null=True)),
                ('doctor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_appointment', to='hospital_site.doctor')),
                ('patient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_appointment', to='hospital_site.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Prescriptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medication', models.CharField(max_length=100)),
                ('medication_en', models.CharField(max_length=100, null=True)),
                ('medication_ru', models.CharField(max_length=100, null=True)),
                ('dosage', models.CharField(max_length=32)),
                ('medical_record', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='prescribed_medication', to='hospital_site.medicalrecord')),
            ],
        ),
    ]
